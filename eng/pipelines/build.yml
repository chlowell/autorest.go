trigger:
  branches:
    include:
    - track2

pr:
  branches:
    include:
    - track2

variables:
  NodeVersion: '14.x'
  goTestPath: '$(system.defaultWorkingDirectory)/test'
  go.version: '1.17'
  GOBIN: '$(system.defaultWorkingDirectory)/bin/go'
  BlobFeedUrl: https://azuresdkartifacts.blob.core.windows.net/azure-sdk-tools/index.json
  OfficialBuildId: $(Build.BuildNumber)
  # NugetSecurityAnalysisWarningLevel: 'none'

resources:
  repositories:
    - repository: azure-sdk-tools
      type: github
      name: Azure/azure-sdk-tools
      endpoint: azure
    - repository: azure-sdk-for-go
      type: github
      name: Azure/azure-sdk-for-go
      endpoint: azure
    # - repository: azure-sdk-build-tools
    #   type: git
    #   name: internal/azure-sdk-build-tools
    #   ref: refs/tags/azure-sdk-build-tools_20210603.1

stages:
  - stage: 'Generate_SDK'
    jobs:
      - job: Build_autorest_go
        pool:
          vmImage: ubuntu-20.04
        steps:
          - task: NodeTool@0
            displayName: 'Install Node $(NodeVersion)'
            inputs:
              versionSpec: '$(NodeVersion)'

          - script: |
              cd $(Build.SourcesDirectory)
              npm install -g "@microsoft/rush"
              rush update --debug
              npm install -g autorest
              rush rebuild -v
            displayName: 'Build autorest.go'

          # - script: |
          #     rush regenerate
          #     git add -A ./test/.
          #     git diff --staged -w 1>&2
          #   displayName: 'Regenerate Autorest Tests'
          #   failOnStderr: true

          # - task: GoTool@0
          #   inputs:
          #     version: '$(go.version)'
          #   displayName: "Select Go Version"

          # - script: |
          #     set -e
          #     go version
          #     go get github.com/jstemmer/go-junit-report
          #   displayName: 'Install Dependencies'
          #   workingDirectory: '$(goTestPath)'

          # - pwsh: |
          #     $modDirs = (./eng/scripts/get_module_dirs.ps1 -serviceDir $(goTestPath))
          #     $exit = 0
          #     foreach ($md in $modDirs) {
          #       pushd $md
          #       Write-Host "##[command]Executing go build -v ./... in $md"
          #       go build -v ./...
          #       if (!$?) {
          #         $exit = 1
          #       }
          #     }
          #     exit $exit
          #   displayName: 'Build'

          # - pwsh: |
          #     $modDirs = (./eng/scripts/get_module_dirs.ps1 -serviceDir $(goTestPath))
          #     $exit = 0
          #     foreach ($md in $modDirs) {
          #       pushd $md
          #       Write-Host "##[command]Executing go mod tidy in $md"
          #       go mod tidy
          #       $diff = (git diff -w .)
          #       write-host ($diff -join "`n")
          #       if ($diff.Length -gt 0) {
          #         $exit = 1
          #       }
          #     }
          #     exit $exit
          #   displayName: 'Mod Tidy'

          # - pwsh: |
          #     $modDirs = (./eng/scripts/get_module_dirs.ps1 -serviceDir $(goTestPath))
          #     $exit = 0
          #     foreach ($md in $modDirs) {
          #       pushd $md
          #       Write-Host "##[command]Executing go vet ./... in $md"
          #       go vet ./...
          #       if (!$?) {
          #         $exit = 1
          #       }
          #     }
          #     exit $exit
          #   displayName: 'Vet'

          # - pwsh: |
          #     pushd ./src/node_modules/@microsoft.azure/autorest.testserver
          #     npm run start:prod&
          #     popd
          #     $testDirs = (./eng/scripts/get_test_dirs.ps1 -serviceDir $(goTestPath))
          #     foreach ($td in $testDirs) {
          #       pushd $td
          #       Write-Host "##[command]Executing go test -run "^Test" -v $td | $(GOBIN)/go-junit-report -set-exit-code > report.xml"
          #       go test -run "^Test" -v | $(GOBIN)/go-junit-report -set-exit-code > report.xml
          #       popd
          #     }
          #     pushd test
          #     go run ./autorest/covreport/main.go
          #     popd
          #     pushd ./src/node_modules/@microsoft.azure/autorest.testserver
          #     npm stop
          #     popd
          #   displayName: 'Run Acceptance Tests'

          # - pwsh: npm test
          #   displayName: 'Run Unit Tests'
          #   workingDirectory: $(System.DefaultWorkingDirectory)/src

          # - task: PublishTestResults@2
          #   inputs:
          #     testRunner: JUnit
          #     testResultsFiles: $(goTestPath)/**/report.xml
          #     failTaskOnFailedTests: true


  # TODO: disabled this condition to make development easier. Add an appropriate condition here when the job works.
  # - ${{if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:

    # TODO: script doesn't need the version to run (can just point it at autorest.go dir) but would be nice to update the script's default autorest.go version
        # variables:
          # AutorestGoVersion: $[stageDependencies.Build_and_Test.Build.outputs['Package.AutorestGoVersion']]
        - task: Generate
          - checkout: self
          - checkout: azure-sdk-for-go
          - checkout: azure-sdk-tools
          - pwsh: ./build.ps1 -cleanGenerated -generate -goExtension=$(Build.SourcesDirectory)/autorest.go
            failOnStderr: true
            workingDirectory: $(Build.SourcesDirectory)/azure-sdk-for-go/eng/scripts
            displayName: 'Generate code in Azure SDK repo'

          # TODO: this step should open a PR in Azure/azure-sdk-for-go, maybe test it on the fork first ;-)
          # - template: /eng/common/pipelines/templates/steps/create-pull-request.yml@azure-sdk-tools
          #   parameters:
          #     BaseBranchName: main
          #     RepoName: azure-sdk-for-go
          #     PRBranchName: auto-update-autorest
          #     CommitMsg: Update autorest.go version to $(AutorestGoVersion)
          #     PRBody: Update autorest.go version to $(AutorestGoVersion)
          #     PRTitle:  Update autorest.go version
          #     PushArgs: -f
          #     WorkingDirectory: $(Build.SourcesDirectory)/azure-sdk-for-go
          #     ScriptDirectory: $(Build.SourcesDirectory)/azure-sdk-tools/eng/common/scripts
